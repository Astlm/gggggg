name: Merge AI Rules

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *' # 每天凌晨 4 点 (UTC) 运行

jobs:
  merge-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # --- Domain Rules ---
      - name: Download Domain Source Files
        run: |
          echo "Downloading domain source files..."
          # ... (download commands remain the same) ...
          curl -f -sSL -o domain_copilot.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/Copilot/domain.json || echo "Failed to download domain_copilot.json"
          curl -f -sSL -o domain_gemini.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/Gemini/domain.json || echo "Failed to download domain_gemini.json"
          curl -f -sSL -o domain_claude.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/Claude/domain.json || echo "Failed to download domain_claude.json"
          curl -f -sSL -o domain_openai.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/OpenAI/domain.json || echo "Failed to download domain_openai.json"
          curl -f -sSL -o domain_metacubex.json https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/category-ai-!cn.json || echo "Failed to download domain_metacubex.json"
          curl -f -sSL -o domain_skk.json https://ruleset.skk.moe/sing-box/non_ip/ai.json || echo "Failed to download domain_skk.json"
          echo "Domain source file download attempts finished."

      - name: Merge Domain Rules By Category (Enhanced Sing-box 1.9 Compatible Dedupe, Version 3 First)
        id: merge_domain
        run: |
          echo "Merging domain rules by category with enhanced Sing-box 1.9 compatible deduplication..."
          jq -s '
            # 定义 ensure_array 函数
            def ensure_array: if type == "array" then . elif type == "string" then [.] else [] end;

            # 步骤 1: 初步唯一列表
            ( [ .[] | .rules? // [] | .[]? | .domain | ensure_array ] | flatten | unique ) as $domains_initial |
            ( [ .[] | .rules? // [] | .[]? | .domain_suffix | ensure_array ] | flatten | unique ) as $suffixes_intermediate |
            ( [ .[] | .rules? // [] | .[]? | .domain_keyword | ensure_array ] | flatten | unique ) as $keywords_final |
            ( [ .[] | .rules? // [] | .[]? | .domain_regex | ensure_array ] | flatten | unique ) as $regexes_final |

            # 步骤 2: 增强 domain_suffix 去重 -> $suffixes_final
            ( $suffixes_intermediate | map(select((startswith(".") | not) or ((ltrimstr(".") as $base | $suffixes_intermediate | index($base) | not)))) ) as $suffixes_final |

            # 步骤 3: 跨类别去重 -> $domains_final
            ( $domains_initial | map(select(. as $d | ($suffixes_final | index($d) | not) )) ) as $domains_final |

            # 步骤 4: 构建包含非空列表的规则对象
            { "domain": $domains_final, "domain_suffix": $suffixes_final, "domain_keyword": $keywords_final, "domain_regex": $regexes_final } |
            map_values(select(length > 0)) |

            # 步骤 5: 构建最终输出结构 (version 在前)
            # 先确定 rules 部分
            ( if (.|length) > 0 then {"rules": [.]} else {"rules": []} end ) as $rules_part |
            # 然后将 rules 部分合并到 version 对象之后
            {"version": 3} + $rules_part

          ' domain_*.json > AI-Domain.json

          # 检查和报告逻辑 (保持不变)
          DOMAIN_RULES_EXIST=$(jq '.rules | length > 0' AI-Domain.json)
          if [ "$DOMAIN_RULES_EXIST" = "false" ]; then
            echo "::warning::Generated AI-Domain.json contains no rules after merging categories."
            echo "domain_rules_generated=false" >> $GITHUB_OUTPUT
          else
            echo "Domain rules merged by category into AI-Domain.json (Enhanced Sing-box 1.9+ dedupe applied, v3)"
            jq '.rules[0] | to_entries | map("\(.key): \(.value | length) rules") | .[]' AI-Domain.json
            echo "domain_rules_generated=true" >> $GITHUB_OUTPUT
          fi

      # --- IP Rules ---
      - name: Download IP Source Files
        run: |
          echo "Downloading IP source files..."
          curl -f -sSL -o ip_copilot.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/Copilot/ipcidr.json || echo "Failed to download ip_copilot.json"
          curl -f -sSL -o ip_openai.json https://raw.githubusercontent.com/Astlm/meta-rules-dat/sing/bm7/OpenAI/ipcidr.json || echo "Failed to download ip_openai.json"
          echo "IP source file download attempts finished."

      - name: Merge IP Rules (Version 3 First)
        id: merge_ip
        run: |
          echo "Merging IP rules..."
          jq -s '
            def ensure_array: if type == "array" then . elif type == "string" then [.] else [] end;
            [ .[] | .rules? // [] | .[]? | .ip_cidr | ensure_array ] | flatten | unique
            # 构建最终输出结构 (version 在前)
            | ( if length > 0 then {"rules": [{"ip_cidr": .}]} else {"rules": []} end ) as $rules_part |
            {"version": 3} + $rules_part # 将 rules 部分合并到 version 对象之后
          ' ip_*.json > AI-IP.json

          # 检查和报告逻辑 (保持不变)
          IP_RULES_EXIST=$(jq '.rules | length > 0' AI-IP.json)
          if [ "$IP_RULES_EXIST" = "false" ]; then
             echo "::warning::Generated AI-IP.json contains no IP rules."
             echo "ip_rules_generated=false" >> $GITHUB_OUTPUT
          else
             echo "IP rules merged into AI-IP.json (v3)"
             echo "Total unique IP rules: $(jq '.rules[0].ip_cidr | length' AI-IP.json)"
             echo "ip_rules_generated=true" >> $GITHUB_OUTPUT
          fi


      # --- Cleanup and Commit ---
      - name: Clean up temporary files
        if: always()
        run: rm -f domain_*.json ip_*.json

      - name: Commit changes
        if: steps.merge_domain.outputs.domain_rules_generated == 'true' || steps.merge_ip.outputs.ip_rules_generated == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add AI-Domain.json AI-IP.json
          if git diff --staged --quiet; then
            echo "No effective changes detected in rule files compared to the last commit."
          else
            git commit -m "Update AI ruleset (Automated, categorized, v3, enhanced Sing-box 1.9+ dedupe)" # 更新 commit 消息
            # 推送重试逻辑 (保持不变)
            ATTEMPTS=0
            MAX_ATTEMPTS=3
            SUCCESS=false
            while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
              git push && SUCCESS=true && break
              ATTEMPTS=$((ATTEMPTS + 1))
              if [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; then
                echo "Push failed. Retrying in 5 seconds... (Attempt $ATTEMPTS/$MAX_ATTEMPTS)"
                sleep 5
              fi
            done
            if [ "$SUCCESS" = true ]; then
              echo "Changes committed and pushed."
            else
              echo "::error::Failed to push changes after $MAX_ATTEMPTS attempts."
              exit 1
            fi
          fi
